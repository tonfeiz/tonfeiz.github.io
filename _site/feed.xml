<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-04-11T10:51:01+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Tonfeiz’s blog</title><subtitle>Share ideas!</subtitle><entry><title type="html">Arts第一周 A Leetcode941 Valid_mountain_array</title><link href="http://localhost:4000/2019/04/10/ARTS%E7%AC%AC%E4%B8%80%E5%91%A8-A-leetcode941-valid_Mountain_Array.html" rel="alternate" type="text/html" title="Arts第一周 A Leetcode941 Valid_mountain_array" /><published>2019-04-10T00:00:00+08:00</published><updated>2019-04-10T00:00:00+08:00</updated><id>http://localhost:4000/2019/04/10/ARTS%E7%AC%AC%E4%B8%80%E5%91%A8-A-leetcode941-valid_Mountain_Array</id><content type="html" xml:base="http://localhost:4000/2019/04/10/ARTS%E7%AC%AC%E4%B8%80%E5%91%A8-A-leetcode941-valid_Mountain_Array.html">&lt;p&gt;Given an array &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt; of integers, return &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; if and only if it is a &lt;em&gt;valid mountain array&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Recall that &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt; is a mountain array if and only if:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A.length&lt;/code&gt; &amp;gt;= 3&lt;/li&gt;
  &lt;li&gt;There exists some &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;0 &amp;lt; i &amp;lt; A.length - 1&lt;/code&gt; such that:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A[0] &amp;lt; A[1] &amp;lt; ... A[i-1] &amp;lt; A[i]&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A[i] &amp;gt; A[i+1] &amp;gt; ... &amp;gt; A[B.length - 1]&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;p&gt;这是一道简单题，题意就是判断一个数组是否存在且只存在一个山顶，其实就是判断是否数组是先升后降的，并且不存在相等元素。&lt;/p&gt;

&lt;p&gt;思路很直白，设置一个变量&lt;code class=&quot;highlighter-rouge&quot;&gt;mountain_top&lt;/code&gt;(需初始化为0)，遍历数组，当找到降序后将山顶位置赋值给它，然后继续遍历，若此后出现升序则直接返回false。最后，若遍历完成后该变量未被修改，说明不存在山顶(单纯升序则为0,单纯降序也为0)。最后，注意排除相等的情况。&lt;/p&gt;

&lt;p&gt;代码是用go语言写的，如下所示&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func validMountainArray(A []int) bool {
    if len(A) &amp;lt; 3 {
        return false
    }
    
    mountain_top := 0
    for i := 0; i &amp;lt; len(A) - 1; i++ {
        if A[i] &amp;gt; A[i + 1] {
            mountain_top = i
            break
        } else if A[i] == A[i + 1] {
            return false;
        }
    }
    for i := mountain_top; i &amp;lt; len(A) - 1; i++ {
        if A[i] &amp;lt;= A[i + 1] {
            return false
        } 
    }
    
    
    return mountain_top != 0
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">Given an array A of integers, return true if and only if it is a valid mountain array.</summary></entry><entry><title type="html">搭建个人博客</title><link href="http://localhost:4000/2019/04/10/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.html" rel="alternate" type="text/html" title="搭建个人博客" /><published>2019-04-10T00:00:00+08:00</published><updated>2019-04-10T00:00:00+08:00</updated><id>http://localhost:4000/2019/04/10/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2</id><content type="html" xml:base="http://localhost:4000/2019/04/10/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.html">&lt;p&gt;关于写博客，其实早就想写了。写博客的好处也从各种渠道都听说过，奈何实在是懒。现在由于看到了ARTS，觉得挺有用的，也想养成长期主动学习的习惯，因此就把博客搞起来，作为这个计划的集合地，当然其它想写的时候也会随便写一些文章。&lt;/p&gt;

&lt;p&gt;搭建博客的教程网上有很多，随便找一个基本上就能搭建完成。我也是拼拼凑凑搭出来的，现在也还只是个雏形。这里还是做个记录，毕竟别人的经验始终是别人的，自己写出来的才是自己的。&lt;/p&gt;

&lt;h2 id=&quot;一利用github-pages托管网站&quot;&gt;一、利用github pages托管网站&lt;/h2&gt;
&lt;p&gt;搭建自己的博客首先得有自己的网站，要有自己的网站首先得有服务器主机来维护它，作为非土豪人士，自己买服务器托管网站这种事是干不出来的。因此，可以使用github pages来托管自己的网站。&lt;/p&gt;

&lt;p&gt;github pages是一个静态站点服务，主要就用来直接从github repo生成网站。因为之前一直也用github，因此一些基本操作也是轻车熟路了，使用它也是基于这个考虑。&lt;/p&gt;

&lt;p&gt;github pages也有一些缺陷，这里简单的列举几点：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;它是静态站点服务，不支持服务端代码，例如PHP，Ruby或者Python&lt;/li&gt;
  &lt;li&gt;github pages所在的repo最好不要超过1GB&lt;/li&gt;
  &lt;li&gt;发布的github pages网站不能超过1GB&lt;/li&gt;
  &lt;li&gt;github pages站点的软带宽每个月不超过100GB&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;对于一般的个人博客网站来说，这些限制应该问题不大。&lt;/p&gt;

&lt;p&gt;接下去说说具体的流程。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;在github上创建一个repo，这个repo的名字必须是&lt;em&gt;username&lt;/em&gt;.github.io,其中&lt;em&gt;username&lt;/em&gt;就是你在github上的用户名&lt;/li&gt;
  &lt;li&gt;选择一个文件夹作为github repo的存放地，例如就在$HOME目录下，在终端下输入下面的命令：&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;git clone https://github.com/username/username.github.io&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;进入上面的文件夹，创建一个index.html文件。命令如下：&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;cd username.github.io&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;echo &quot;Hello World&quot; &amp;gt; index.html&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;将改变上传到github端。命令如下：&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;git add -all&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit -m &quot;Initial commit&quot;&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;git push -u origin master&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;至此，网站就可以查看了。可以在浏览器中输入&lt;br /&gt;
&lt;strong&gt;https://&lt;em&gt;username&lt;/em&gt;.github.io&lt;/strong&gt;&lt;br /&gt;
查看自己的网站&lt;/p&gt;
&lt;h2 id=&quot;二利用jkeyll编辑自己的博客&quot;&gt;二、利用jkeyll编辑自己的博客&lt;/h2&gt;
&lt;p&gt;有了github pages托管网站之后，接下去就是要将网站变成博客形式了。虽然之前稍微学过一点前端的知识，但要自己从头搭建还是有些困难。在github pages上发现大力推荐的一个静态网页和博客生成框架jekyll，可以直接把markdown格式的文件转化成网页，因此干脆就入坑jekyll了。&lt;/p&gt;

&lt;p&gt;目前我也只是过了两遍jekyll的教程，具体使用还需要摸索，这里就简单的讲一下基础的内容。如果想要详细了解，还是得去&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;jekyll官网&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;jekyll首先需要安装Ruby的运行环境，在Linux Ubuntu环境下是很简单的，输入下面的命令：
&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt-get install ruby-full build-essential zlib1g-dev&lt;/code&gt;
接着设置一下环境变量&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo '# Install Ruby Gems to ~/gems' &amp;gt;&amp;gt; ~/.bashrc
echo 'export GEM_HOME=&quot;$HOME/gems&quot;' &amp;gt;&amp;gt; ~/.bashrc
echo 'export PATH=&quot;$HOME/gems/bin:$PATH&quot;' &amp;gt;&amp;gt; ~/.bashrc
source ~/.bashrc`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;最后，安装jekyll以及bundler插件&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;gem install jekyll bundler&lt;/code&gt;&lt;br /&gt;
至此，jekyll的安装就完成了。&lt;/p&gt;

&lt;p&gt;jekyll的使用也很简单，如果不使用github pages，直接
&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll new [foldername]&lt;/code&gt;
其中&lt;code class=&quot;highlighter-rouge&quot;&gt;foldername&lt;/code&gt;就是文件夹名字，jekyll就会在文件夹中生成一个网站的雏形。想要在本地浏览网页只需要&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;就可以在浏览器中输入&lt;a href=&quot;http://127.0.0.1:4000&quot;&gt;http://127.0.0.1:4000&lt;/a&gt;浏览网页的样子了。(注意，这里&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll new&lt;/code&gt;可能花费较长时间，其实不用该命令也可以，自己手动建立目录就行了)&lt;/p&gt;

&lt;p&gt;如果使用github pages，也很简单，在之前的第一步生成的github repo里面创建对应目录结构也一样可以浏览。一般的目录结构如下：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.  
+-- _site  
+-- _layouts  
|   +--  default.html  
|   +--  post.html  
+-- _posts  
|   +-- 2019-11-11-new-post.md  
|   +-- 2019-1-1-old-post.md  
+-- _data  
+-- _includes  
+-- assets  
|   +-- css  
|   +-- images  
|   +-- js  
+-- _sass  
+-- _config.yml  
+-- index.html  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;其中,_layouts目录放置的是网页文件的布局样式，_posts目录放置的是博客文章(注意，文件名字必须是yyyy-mm-dd-&lt;em&gt;article_title&lt;/em&gt;样式的)，_includes目录放置的是导入文件，assets目录放置的是资源文件，包括css和js等。_config.yml是配置文件，index.html则是网页文件。&lt;/p&gt;

&lt;p&gt;在github pages上还可以直接使用jekyll的主题，虽然主题不多，但暂时可以将就着用，后期再自己改进。&lt;/p&gt;</content><author><name></name></author><summary type="html">关于写博客，其实早就想写了。写博客的好处也从各种渠道都听说过，奈何实在是懒。现在由于看到了ARTS，觉得挺有用的，也想养成长期主动学习的习惯，因此就把博客搞起来，作为这个计划的集合地，当然其它想写的时候也会随便写一些文章。</summary></entry></feed>